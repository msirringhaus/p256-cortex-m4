initSidebarItems({"constant":[["__bool_true_false_are_defined",""],["false_",""],["has_d_cache",""],["has_fpu",""],["include_p256_decode_point",""],["include_p256_decompress_point",""],["include_p256_ecdh",""],["include_p256_keygen",""],["include_p256_raw_scalarmult_base",""],["include_p256_raw_scalarmult_generic",""],["include_p256_sign",""],["include_p256_to_octet_string_compressed",""],["include_p256_to_octet_string_hybrid",""],["include_p256_to_octet_string_uncompressed",""],["include_p256_verify",""],["true_",""],["use_fast_p256_basemult",""],["use_mul_for_sqr",""]],"fn":[["P256_check_range_n","Checks that the argument, as little-endian integer, is a reduced non-zero element of the scalar field."],["P256_check_range_p","Checks that the argument, as little-endian integer, is a reduced element of the base field."],["p256_convert_endianness","Converts endianness by reversing the input value."],["p256_ecdh_calc_shared_secret","Generates the shared secret according to the ECDH standard."],["p256_keygen","Calculates the public key from a given private key for use by either ECDSA or ECDH."],["p256_octet_string_to_point","Decodes a point according to the three encodings above."],["p256_point_to_octet_string_compressed","Compressed encoding: “02 || Px” if Py is even and “03 || Px” if Py is odd."],["p256_point_to_octet_string_hybrid","Hybrid encoding: “06 || Px || Py” if Py is even and “07 || Px || Py” if Py is odd (a pretty useless encoding)."],["p256_point_to_octet_string_uncompressed","Uncompressed encoding: “04 || Px || Py”."],["p256_scalarmult_base","Raw scalar multiplication by the base point of the elliptic curve."],["p256_scalarmult_generic","Raw scalar multiplication by any point on the elliptic curve."],["p256_sign","Creates an ECDSA signature."],["p256_sign_step1","Creates an ECDSA signature, using a two-step procedure."],["p256_sign_step2","Second step of creating an ECDSA signature, using a two-step procedure."],["p256_verify","Verifies an ECDSA signature."]],"struct":[["SignPrecomp","Sign precomputation state."],["max_align_t",""]],"type":[["int_fast16_t",""],["int_fast32_t",""],["int_fast64_t",""],["int_fast8_t",""],["int_least16_t",""],["int_least32_t",""],["int_least64_t",""],["int_least8_t",""],["intmax_t",""],["size_t",""],["uint_fast16_t",""],["uint_fast32_t",""],["uint_fast64_t",""],["uint_fast8_t",""],["uint_least16_t",""],["uint_least32_t",""],["uint_least64_t",""],["uint_least8_t",""],["uintmax_t",""],["wchar_t",""]]});